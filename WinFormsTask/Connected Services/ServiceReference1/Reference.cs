//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WinFormsTask.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CompositeType", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceLibraryToDB")]
    [System.SerializableAttribute()]
    public partial class CompositeType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool BoolValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StringValueField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool BoolValue {
            get {
                return this.BoolValueField;
            }
            set {
                if ((this.BoolValueField.Equals(value) != true)) {
                    this.BoolValueField = value;
                    this.RaisePropertyChanged("BoolValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StringValue {
            get {
                return this.StringValueField;
            }
            set {
                if ((object.ReferenceEquals(this.StringValueField, value) != true)) {
                    this.StringValueField = value;
                    this.RaisePropertyChanged("StringValue");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Staff", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceLibraryToDB.Models")]
    [System.SerializableAttribute()]
    public partial class Staff : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PatronymicField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int StaffIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SurnameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Patronymic {
            get {
                return this.PatronymicField;
            }
            set {
                if ((object.ReferenceEquals(this.PatronymicField, value) != true)) {
                    this.PatronymicField = value;
                    this.RaisePropertyChanged("Patronymic");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int StaffId {
            get {
                return this.StaffIdField;
            }
            set {
                if ((this.StaffIdField.Equals(value) != true)) {
                    this.StaffIdField = value;
                    this.RaisePropertyChanged("StaffId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Surname {
            get {
                return this.SurnameField;
            }
            set {
                if ((object.ReferenceEquals(this.SurnameField, value) != true)) {
                    this.SurnameField = value;
                    this.RaisePropertyChanged("Surname");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Task", Namespace="http://schemas.datacontract.org/2004/07/WcfServiceLibraryToDB.Models")]
    [System.SerializableAttribute()]
    public partial class Task : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ExpiryDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameTaskField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StaffField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartDateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int TaskIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WorkloadField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ExpiryDate {
            get {
                return this.ExpiryDateField;
            }
            set {
                if ((this.ExpiryDateField.Equals(value) != true)) {
                    this.ExpiryDateField = value;
                    this.RaisePropertyChanged("ExpiryDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NameTask {
            get {
                return this.NameTaskField;
            }
            set {
                if ((object.ReferenceEquals(this.NameTaskField, value) != true)) {
                    this.NameTaskField = value;
                    this.RaisePropertyChanged("NameTask");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Staff {
            get {
                return this.StaffField;
            }
            set {
                if ((object.ReferenceEquals(this.StaffField, value) != true)) {
                    this.StaffField = value;
                    this.RaisePropertyChanged("Staff");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartDate {
            get {
                return this.StartDateField;
            }
            set {
                if ((this.StartDateField.Equals(value) != true)) {
                    this.StartDateField = value;
                    this.RaisePropertyChanged("StartDate");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int TaskId {
            get {
                return this.TaskIdField;
            }
            set {
                if ((this.TaskIdField.Equals(value) != true)) {
                    this.TaskIdField = value;
                    this.RaisePropertyChanged("TaskId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Workload {
            get {
                return this.WorkloadField;
            }
            set {
                if ((this.WorkloadField.Equals(value) != true)) {
                    this.WorkloadField = value;
                    this.RaisePropertyChanged("Workload");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        string GetData(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetData", ReplyAction="http://tempuri.org/IService1/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync(int value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        WinFormsTask.ServiceReference1.CompositeType GetDataUsingDataContract(WinFormsTask.ServiceReference1.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetDataUsingDataContract", ReplyAction="http://tempuri.org/IService1/GetDataUsingDataContractResponse")]
        System.Threading.Tasks.Task<WinFormsTask.ServiceReference1.CompositeType> GetDataUsingDataContractAsync(WinFormsTask.ServiceReference1.CompositeType composite);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetStaff", ReplyAction="http://tempuri.org/IService1/GetStaffResponse")]
        WinFormsTask.ServiceReference1.Staff[] GetStaff();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetStaff", ReplyAction="http://tempuri.org/IService1/GetStaffResponse")]
        System.Threading.Tasks.Task<WinFormsTask.ServiceReference1.Staff[]> GetStaffAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertStaff", ReplyAction="http://tempuri.org/IService1/InsertStaffResponse")]
        int InsertStaff(WinFormsTask.ServiceReference1.Staff staff);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertStaff", ReplyAction="http://tempuri.org/IService1/InsertStaffResponse")]
        System.Threading.Tasks.Task<int> InsertStaffAsync(WinFormsTask.ServiceReference1.Staff staff);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateStaff", ReplyAction="http://tempuri.org/IService1/UpdateStaffResponse")]
        int UpdateStaff(WinFormsTask.ServiceReference1.Staff staff);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateStaff", ReplyAction="http://tempuri.org/IService1/UpdateStaffResponse")]
        System.Threading.Tasks.Task<int> UpdateStaffAsync(WinFormsTask.ServiceReference1.Staff staff);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeletetStaff", ReplyAction="http://tempuri.org/IService1/DeletetStaffResponse")]
        int DeletetStaff(WinFormsTask.ServiceReference1.Staff staff);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeletetStaff", ReplyAction="http://tempuri.org/IService1/DeletetStaffResponse")]
        System.Threading.Tasks.Task<int> DeletetStaffAsync(WinFormsTask.ServiceReference1.Staff staff);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetTasks", ReplyAction="http://tempuri.org/IService1/GetTasksResponse")]
        WinFormsTask.ServiceReference1.Task[] GetTasks();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetTasks", ReplyAction="http://tempuri.org/IService1/GetTasksResponse")]
        System.Threading.Tasks.Task<WinFormsTask.ServiceReference1.Task[]> GetTasksAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertTask", ReplyAction="http://tempuri.org/IService1/InsertTaskResponse")]
        int InsertTask(WinFormsTask.ServiceReference1.Task task);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertTask", ReplyAction="http://tempuri.org/IService1/InsertTaskResponse")]
        System.Threading.Tasks.Task<int> InsertTaskAsync(WinFormsTask.ServiceReference1.Task task);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateTask", ReplyAction="http://tempuri.org/IService1/UpdateTaskResponse")]
        int UpdateTask(WinFormsTask.ServiceReference1.Task task);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateTask", ReplyAction="http://tempuri.org/IService1/UpdateTaskResponse")]
        System.Threading.Tasks.Task<int> UpdateTaskAsync(WinFormsTask.ServiceReference1.Task task);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeletetTask", ReplyAction="http://tempuri.org/IService1/DeletetTaskResponse")]
        int DeletetTask(WinFormsTask.ServiceReference1.Task task);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeletetTask", ReplyAction="http://tempuri.org/IService1/DeletetTaskResponse")]
        System.Threading.Tasks.Task<int> DeletetTaskAsync(WinFormsTask.ServiceReference1.Task task);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : WinFormsTask.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<WinFormsTask.ServiceReference1.IService1>, WinFormsTask.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData(int value) {
            return base.Channel.GetData(value);
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync(int value) {
            return base.Channel.GetDataAsync(value);
        }
        
        public WinFormsTask.ServiceReference1.CompositeType GetDataUsingDataContract(WinFormsTask.ServiceReference1.CompositeType composite) {
            return base.Channel.GetDataUsingDataContract(composite);
        }
        
        public System.Threading.Tasks.Task<WinFormsTask.ServiceReference1.CompositeType> GetDataUsingDataContractAsync(WinFormsTask.ServiceReference1.CompositeType composite) {
            return base.Channel.GetDataUsingDataContractAsync(composite);
        }
        
        public WinFormsTask.ServiceReference1.Staff[] GetStaff() {
            return base.Channel.GetStaff();
        }
        
        public System.Threading.Tasks.Task<WinFormsTask.ServiceReference1.Staff[]> GetStaffAsync() {
            return base.Channel.GetStaffAsync();
        }
        
        public int InsertStaff(WinFormsTask.ServiceReference1.Staff staff) {
            return base.Channel.InsertStaff(staff);
        }
        
        public System.Threading.Tasks.Task<int> InsertStaffAsync(WinFormsTask.ServiceReference1.Staff staff) {
            return base.Channel.InsertStaffAsync(staff);
        }
        
        public int UpdateStaff(WinFormsTask.ServiceReference1.Staff staff) {
            return base.Channel.UpdateStaff(staff);
        }
        
        public System.Threading.Tasks.Task<int> UpdateStaffAsync(WinFormsTask.ServiceReference1.Staff staff) {
            return base.Channel.UpdateStaffAsync(staff);
        }
        
        public int DeletetStaff(WinFormsTask.ServiceReference1.Staff staff) {
            return base.Channel.DeletetStaff(staff);
        }
        
        public System.Threading.Tasks.Task<int> DeletetStaffAsync(WinFormsTask.ServiceReference1.Staff staff) {
            return base.Channel.DeletetStaffAsync(staff);
        }
        
        public WinFormsTask.ServiceReference1.Task[] GetTasks() {
            return base.Channel.GetTasks();
        }
        
        public System.Threading.Tasks.Task<WinFormsTask.ServiceReference1.Task[]> GetTasksAsync() {
            return base.Channel.GetTasksAsync();
        }
        
        public int InsertTask(WinFormsTask.ServiceReference1.Task task) {
            return base.Channel.InsertTask(task);
        }
        
        public System.Threading.Tasks.Task<int> InsertTaskAsync(WinFormsTask.ServiceReference1.Task task) {
            return base.Channel.InsertTaskAsync(task);
        }
        
        public int UpdateTask(WinFormsTask.ServiceReference1.Task task) {
            return base.Channel.UpdateTask(task);
        }
        
        public System.Threading.Tasks.Task<int> UpdateTaskAsync(WinFormsTask.ServiceReference1.Task task) {
            return base.Channel.UpdateTaskAsync(task);
        }
        
        public int DeletetTask(WinFormsTask.ServiceReference1.Task task) {
            return base.Channel.DeletetTask(task);
        }
        
        public System.Threading.Tasks.Task<int> DeletetTaskAsync(WinFormsTask.ServiceReference1.Task task) {
            return base.Channel.DeletetTaskAsync(task);
        }
    }
}
